name: Send Discord Webhook
description: Sends a webhook to Discord
inputs:
  aws-access-key-id:
    description: AWS Access Key ID
    required: true
  aws-secret-access-key:
    description: AWS Secret Access Key
    required: true
  aws-region:
    description: AWS Region
    required: true
    default: us-east-1
  task-definition:
    description: Path to task definition
    required: true
  container-name:
    description: Name of the container
    required: true
    default: main
  image:
    description: Image to deploy
    required: true
  service:
    description: Name of the service
    required: true
  env:
    description: Environment to deploy to (prod/qa)
    required: true
  prod-webhook-url:
    description: Discord Webhook URL for PROD
    required: true
  qa-webhook-url:
    description: Discord Webhook URL for QA
    required: true
  embed-title:
    description: Title of the embed
    required: true
runs:
  using: composite
  steps:
    - name: Send Discord Webhook
      if: ${{ inputs.embed-title != '' }}
      uses: ./.github/actions/discord-webhook
      with:
        context: ${{ inputs.env }}
        prod-webhook-url: ${{ inputs.prod-webhook-url }}
        qa-webhook-url: ${{ inputs.qa-webhook-url }}
        embed-color: 15105570
        embed-title: "${{ inputs.embed-title }}"
        embed-description: "```Deploy Started```"

    - name: Configure AWS credentials
      if: success()
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Set Task Definition
      if: success()
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ inputs.task-definition }}
        container-name: ${{ inputs.container-name }}
        image: ${{ inputs.image }}

    - name: Deploy QA
      if: ${{ inputs.env == 'qa' }}
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ inputs.service }}
        cluster: qa-ecs-cluster-Cluster-UprHq7IznJij
        wait-for-service-stability: false

    - name: Deploy PROD
      if: ${{ inputs.env == 'prod' }}
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ inputs.service }}
        cluster: prod-ecs-cluster-Cluster-8TMWuJFHdmaO
        wait-for-service-stability: false

    - name: Send Discord Webhook
      if: ${{ failure() && inputs.embed-title != '' }}
      uses: ./.github/actions/discord-webhook
      with:
        context: ${{ inputs.env }}
        prod-webhook-url: ${{ inputs.prod-webhook-url }}
        qa-webhook-url: ${{ inputs.qa-webhook-url }}
        embed-title: "${{ inputs.embed-title }}"
        embed-color: 15548997
        embed-description: "```ðŸš¨ Deploy Failed ðŸš¨```"
